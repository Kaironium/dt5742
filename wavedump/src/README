What is Wavedump?
-----------------

This repository contains software for taking data from a CAEN DT5742
digitizer and analyzing it. It's mostly intended to be used to analyze data
from LYSO scintillator arrays used in the CMS experiment. The main program
wavedump takes data, and the python script analyze-waveforms is used for
analyzing it.

Compiling
---------

To compile the software first make sure to install all the dependencies in
the root directory of the repository (../../README).

To recompile, just edit `wavedump.c` and then type:

```console
$ make
```

Overview of Wavedump and Python Programs
----------------------------------------

## wavedump
This program communicates with the CAEN DT5742 digitizer, takes data, and
stores it in an hdf5 file. Settings for the digitizer can either be set with
a config file given in the command line, or written into `wavedump.c`.

Example:

```console
$ ./wavedump -o output.hdf5 --label sodium --threshold -0.05
```

## acquire-waveforms
This serves the same purpose as `wavedump`, except it takes data from the
Agilent oscilloscope. This format it uses to save the waveform data is
outdated (it does not store datasets in labeled groups).

## analyze-waveforms
Interprets the hdf5 files generated from `wavedump`, makes charge
histograms, finds the sodium and SPE charges, and calculates the light
output. Has the ability to upload all relevant information to the database.
`analyze-waveforms` could be easily updated to also interpret the files from
`acquire-waveforms`, but `acquired-waveforms` needs to be updated first. 

Example:

```console
$ ./analyze-waveforms output.hdf5 -o output.root
```

## fit-histograms (outdated)
Reads the root files generated from `analyze-waveforms`, and calculates the
charge of either the 511 or SPE signal. Can optionally store the data to a
temporary csv file. In the future, this data will be uploaded to the website
instead.

## save_charge_data.py (outdated) 
Reads the temporary csv file generated by `fit-histograms`, and saves the
data to a more permanent csv file with more data included.

## dark_vs_laser.py (outdated)
Reads data from the csv file generated by `save_charge_data.py`, and makes a
plot of the SPE charge over each channel for different methods of analysis.
As of now, Aug. 9 2022, it compares SPE charge measurements when using the
laser, and measurements from the dark counts using 3 different lengths of
integration.
